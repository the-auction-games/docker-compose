version: '3'
services:
  ######################
  # Zipkin | Tx Traces #
  ######################
  zipkin:
    image: "openzipkin/zipkin"
    ports:
      - "9411:9411"
    networks:
      - dapr-net
  ##########################
  # Dapr placement service #
  ##########################
  placement:
    image: "daprio/dapr"
    command: [ "./placement", "-port", "50006" ]
    ports:
      - "50006:50006"
    depends_on:
      - zipkin
    networks:
      - dapr-net
  #####################
  # Redis State Store #
  #####################
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - dapr-net
  ###################################
  # Account API: DB + App + Sidecar #
  ###################################
  account-api-postgres:
    image: "account-api-postgres-image"
    ports:
      - "5432:5432"
    environment:
      PGDATA: /postgres
    networks:
      - dapr-net
  account-api:
    image: "account-api"
    ports:
      - "8000:8000"
    depends_on:
      - placement
    networks:
      - dapr-net
  account-api-sidecar:
    image: "daprio/daprd:edge"
    command:
      [
        "./daprd",
        "-app-id",
        "accountapi",
        "-app-port",
        "8000",
        "-placement-host-address",
        "placement:50006",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config.yaml"
      ]
    volumes:
      - "./dapr/components/account-api/:/dapr/components"
      - "./dapr/config.yaml:/dapr/config.yaml"
    depends_on:
      - account-api
      - account-api-postgres
    restart: on-failure
    network_mode: "service:account-api"
  ####################################
  # Activity API: DB + App + Sidecar #
  ####################################
  activity-api-postgres:
    image: "activity-api-postgres-image"
    ports:
      - "5433:5432"
    environment:
      PGDATA: /postgres
    networks:
      - dapr-net
  activity-api:
    image: "activity-api"
    ports:
      - "8081:8081"
    depends_on:
      - placement
    networks:
      - dapr-net
  activity-api-sidecar:
    image: "daprio/daprd:edge"
    command:
      [
        "./daprd",
        "-app-id",
        "activityapi",
        "-app-port",
        "8081",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3502",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config.yaml"
      ]
    volumes:
      - "./dapr/components/activity-api/:/dapr/components"
      - "./dapr/config.yaml:/dapr/config.yaml"
    depends_on:
      - activity-api
      - activity-api-postgres
    restart: on-failure
    network_mode: "service:activity-api"
  ###################################
  # Auction API: DB + App + Sidecar #
  ###################################
  auction-api-mongo:
    image: "auction-api-mongo-image"
    ports:
      - "29999:27017"
    networks:
      - dapr-net
  auction-api:
    image: "auction-api"
    ports:
      - "8080:8080"
    depends_on:
      - placement
    networks:
      - dapr-net
  auction-api-sidecar:
    image: "daprio/daprd:edge"
    command:
      [
        "./daprd",
        "-app-id",
        "auctionapi",
        "-app-port",
        "8080",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3501",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config.yaml"
      ]
    volumes:
      - "./dapr/components/auction-api/:/dapr/components"
      - "./dapr/config.yaml:/dapr/config.yaml"
    depends_on:
      - auction-api
      - auction-api-mongo
    restart: on-failure
    network_mode: "service:auction-api"
  ###################################
  # Session API: DB + App + Sidecar #
  ###################################
  session-api-redis:
    image: "redis:alpine"
    ports:
      - "9119:6379"
    networks:
      - dapr-net
  session-api:
    image: "session-api"
    ports:
      - "3000:3000"
    depends_on:
      - placement
    networks:
      - dapr-net
  session-api-sidecar:
    image: "daprio/daprd:edge"
    command:
      [
        "./daprd",
        "-app-id",
        "sessionapi",
        "-app-port",
        "3000",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3503",
        "-components-path",
        "/dapr/components",
        "-config",
        "/dapr/config.yaml"
      ]
    volumes:
      - "./dapr/components/session-api/:/dapr/components"
      - "./dapr/config.yaml:/dapr/config.yaml"
    depends_on:
      - session-api
      - session-api-redis
    restart: on-failure
    network_mode: "service:session-api"
  ##################################
  # Auction Web App: App + Sidecar #
  ##################################
  auction-web-app:
    image: "auction-web-app"
    ports:
      - "80:80"
    depends_on:
      - placement
    networks:
      - dapr-net
  auction-web-app-sidecar:
    image: "daprio/daprd:edge"
    ports:
      - "3504:3504"
    command:
      [
        "./daprd",
        "-app-id",
        "webapp",
        "-app-port",
        "80",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3504",
        "-config",
        "/dapr/config.yaml"
      ]
    volumes:
      - "./dapr/config.yaml:/dapr/config.yaml"
    depends_on:
      - auction-web-app
    restart: on-failure
    networks:
      - dapr-net
networks:
  dapr-net: