version: '3'
services:

  ################################
  # Zipkin | Transaction Tracing #
  ################################

  zipkin:
    image: "openzipkin/zipkin"
    ports:
      - "9411:9411"
    networks:
      - dapr-net
    restart: always

  ##########################
  # Dapr Placement Service #
  ##########################

  placement:
    image: "daprio/dapr"
    volumes:
      - "./dapr/config.yaml:/dapr/config.yaml"
    command: [ "./placement", "-port", "50006" ]
    ports:
      - "50006:50006"
    depends_on:
      - zipkin
    networks:
      - dapr-net
    restart: always

  ######################################
  # Redis | PubSub & Actor State Store #
  ######################################

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - dapr-net
    restart: always

  ###################################
  # Account API: DB + App + Sidecar #
  ###################################

  account-db:
    build:
      context: ./build/databases
      dockerfile: ./postgres/Dockerfile
      args:
        - DUMP_FILE=account-dump.sql
    environment:
      - DB_NAME=account
      - API_KEY=meh
    ports:
      - "5432:5432"
    networks:
      - dapr-net
    restart: always

  account-api:
    image: "account-api"
    environment:
      - APP_PORT=8000
      - SIDECAR_PORT=3500
      - STATE_STORE_NAME=account-statestore
    ports:
      - "8000:8000"
    networks:
      - dapr-net
    restart: always

  account-api-sidecar:
    image: "daprio/daprd:edge"
    volumes:
      - "./dapr/config.yaml:/dapr/config.yaml"
      - "./dapr/components/:/dapr/components/"
    command:
      [
        "./daprd",
        "-app-id",
        "account-api",
        "-app-port",
        "8000",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3500",
        "-config",
        "/dapr/config.yaml",
        "-components-path",
        "/dapr/components",
        "-dapr-http-max-request-size",
        "16"
      ]
    network_mode: "service:account-api"
    depends_on:
      - placement
      - account-db
      - account-api
    restart: always

  ####################################
  # Activity API: DB + App + Sidecar #
  ####################################
  
  activity-db:
    build:
      context: ./build/databases
      dockerfile: ./postgres/Dockerfile
      args:
        - DUMP_FILE=activity-dump.sql
    environment:
      - DB_NAME=activity
      - API_KEY=meh
    ports:
      - "5433:5432"
    networks:
      - dapr-net
    restart: always
  
  activity-api:
    image: "activity-api"
    environment:
      - APP_PORT=8080
      - SIDECAR_PORT=3500
      - STATE_STORE_NAME=activity-statestore
    ports:
      - "8081:8080"
    networks:
      - dapr-net
    restart: always
  
  activity-api-sidecar:
    image: "daprio/daprd:edge"
    volumes:
      - "./dapr/config.yaml:/dapr/config.yaml"
      - "./dapr/components/:/dapr/components/"
    command:
      [
        "./daprd",
        "-app-id",
        "activity-api",
        "-app-port",
        "8080",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3500",
        "-config",
        "/dapr/config.yaml",
        "-components-path",
        "/dapr/components",
        "-dapr-http-max-request-size",
        "16"
      ]
    network_mode: "service:activity-api"
    depends_on:
      - placement
      - activity-db
      - activity-api
    restart: always
  
  ###################################
  # Auction API: DB + App + Sidecar #
  ###################################
  
  auction-db:
    build:
      context: ./build/databases
      dockerfile: ./mongo/Dockerfile
      args:
        - DUMP_DIR=auction
        - API_KEY=meh
    environment:
      - DB_NAME=auction
    ports:
      - "29999:27017"
    networks:
      - dapr-net
    restart: always
  
  auction-api:
    image: "auction-api"
    environment:
      - APP_PORT=8080
      - SIDECAR_PORT=3500
      - STATE_STORE_NAME=auction-statestore
    ports:
      - "8080:8080"
    networks:
      - dapr-net
    restart: always
  
  auction-api-sidecar:
    image: "daprio/daprd:edge"
    volumes:
      - "./dapr/config.yaml:/dapr/config.yaml"
      - "./dapr/components/:/dapr/components/"
    command:
      [
        "./daprd",
        "-app-id",
        "auction-api",
        "-app-port",
        "8080",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3500",
        "-config",
        "/dapr/config.yaml",
        "-components-path",
        "/dapr/components",
        "-dapr-http-max-request-size",
        "16"
      ]
    network_mode: "service:auction-api"
    depends_on:
      - placement
      - auction-db
      - auction-api
    restart: always
  
  ###################################
  # Session API: DB + App + Sidecar #
  ###################################
  
  session-db:
    image: "redis:alpine"
    ports:
      - "9119:6379"
    networks:
      - dapr-net
    restart: always
  
  session-api:
    image: "session-api"
    environment:
      - APP_PORT=3000
      - SIDECAR_PORT=3500
      - STATE_STORE_NAME=session-statestore
    ports:
      - "3000:3000"
    networks:
      - dapr-net
    restart: always
  
  session-api-sidecar:
    image: "daprio/daprd:edge"
    volumes:
      - "./dapr/config.yaml:/dapr/config.yaml"
      - "./dapr/components/:/dapr/components/"
    command:
      [
        "./daprd",
        "-app-id",
        "session-api",
        "-app-port",
        "3000",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3500",
        "-config",
        "/dapr/config.yaml",
        "-components-path",
        "/dapr/components",
        "-dapr-http-max-request-size",
        "16"
      ]
    network_mode: "service:session-api"
    depends_on:
      - placement
      - session-db
      - session-api
    restart: always
  
  ##################################
  # Auction Web App: App + Sidecar #
  ##################################
  
  auction-web-app:
    image: "auction-web-app"
    environment:
      - SIDECAR_PORT=3500
    ports:
      - "80:80"
      - "3500:3500"
    networks:
      - dapr-net
    restart: always
  
  auction-web-app-sidecar:
    image: "daprio/daprd:edge"
    volumes:
      - "./dapr/config.yaml:/dapr/config.yaml"
      - "./dapr/components/:/dapr/components/"
    command:
      [
        "./daprd",
        "-app-id",
        "auction-web-app",
        "-app-port",
        "80",
        "-placement-host-address",
        "placement:50006",
        "-dapr-http-port",
        "3500",
        "-config",
        "/dapr/config.yaml",
        "-components-path",
        "/dapr/components",
        "-dapr-http-max-request-size",
        "16"
      ]
    network_mode: "service:auction-web-app"
    depends_on:
      - placement
      - auction-web-app
    restart: always

networks:
  dapr-net:
